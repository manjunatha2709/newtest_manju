package com.symantec.vip.automation;import java.util.List;import java.util.concurrent.TimeUnit;import org.apache.log4j.Logger;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver;import org.openqa.selenium.firefox.FirefoxDriver;import org.openqa.selenium.support.ui.ExpectedConditions;import org.openqa.selenium.support.ui.Select;import org.openqa.selenium.support.ui.WebDriverWait;import com.symantec.vip.automation.utils.SeleniumHelper;public class VIPManagerTests_backup {	public static Logger logger = Logger.getLogger("VIP_EG_AUTOMATION");	public void EnableCredential(String url, String credential, String email) {		WebDriver dr1 = null;		WebDriver dr2 = null;		SeleniumHelper sHelper = new SeleniumHelper();		try {			dr1 = new FirefoxDriver();			//System.setProperty("webdriver.chrome.driver", "D:\\jenkins\\drivers\\chromedriver.exe");			//dr1 = new ChromeDriver();			WebDriverWait wt = new WebDriverWait(dr1, 120);			dr1.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr1.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching VIP manager URL " + url);			dr1.get("https://" + url);			wt.until(ExpectedConditions.elementToBeClickable(By.id("loginButton")));			dr1.findElement(By.name("tempuser.userName")).sendKeys(email);			dr1.findElement(By.name("tempuser.password")).sendKeys("1Password");			dr1.findElement(By.id("loginButton")).click();			wt.until(ExpectedConditions.presenceOfElementLocated(By.name("enteredOTP")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to request temp sec code ");			dr1.findElement(By.partialLinkText("Request a temporary security code")).click();			wt.until(ExpectedConditions.elementToBeClickable(By.name("continuebutton")));			dr1.findElement(By.name("continuebutton")).click();			dr2 = new FirefoxDriver();			//dr2 = new ChromeDriver();			dr2.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr2.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching gmail to get sec code ");			dr2.get("http://www.gmail.com");			WebDriverWait wt1 = new WebDriverWait(dr2, 120);			wt1.until(ExpectedConditions.presenceOfElementLocated(By.id("Email")));			dr2.findElement(By.id("Email")).sendKeys(email);			if (sHelper.isElementPresent(dr2, dr2.findElement(By.id("next")))) {				dr2.findElement(By.id("next")).click();			}			dr2.findElement(By.id("Passwd")).sendKeys("vipeg5678");			dr2.findElement(By.id("signIn")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicked on Sign In button to login to gmail ");			wt1.until(ExpectedConditions.visibilityOf(dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]"))));			String message = dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).getText();			if (message.contains("Temporary access to VIP Manager")) {				dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).click();			}			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to grab security code for authentication ");			String securitycode = dr2.findElement(By.xpath("//td[text()='Symantec User Authentication Technical Support']/ancestor::tr[1]/preceding-sibling::tr[2]/td/b")).getText();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Got security code: " + securitycode);			dr2.quit();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Entering temp security code in VIP manager ");			dr1.findElement(By.id("firstOTP")).sendKeys(securitycode);			dr1.findElement(By.id("continueButton")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Successfully logged to VIP manager");			dr1.findElement(By.linkText("Credentials")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to search for credential " + credential);			dr1.findElement(By.id("searchText")).sendKeys(credential);			Thread.sleep(1000);			dr1.findElement(By.xpath("//input[@alt='Search']")).click();			Thread.sleep(2000);			wt.until(ExpectedConditions.presenceOfElementLocated(By.linkText("Enable Credential")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Search returned the credential " + credential);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on enable the credential option " + credential);			dr1.findElement(By.linkText("Enable Credential")).click();			String childid = dr1.getWindowHandle();			dr1.switchTo().window(childid);			dr1.findElement(By.id("primaryID")).click();			dr1.switchTo().defaultContent();			String message1 = dr1.findElement(By.xpath("//div[@id='ajaxMessagingComponent']/ul/li[2]/div")).getText();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Received the message " + message1);			if (message1.contains("You have successfully edited the credential")) {				logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Successfully enabled the credential");			} else {				logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Failed to enable the credential");			}			dr1.quit();			Thread.sleep(8000);		} catch (Exception e) {			logger.error("Thread-" + Thread.currentThread().getId() + ": " + "Failed to enabled the credential\n" + e.getMessage());			dr1.quit();			dr2.quit();		}	}	public void unlockUser(String url, String userName, String email) {		WebDriver dr1 = null;		WebDriver dr2 = null;		SeleniumHelper sHelper = new SeleniumHelper();		try {			//System.setProperty("webdriver.chrome.driver", "D:\\jenkins\\drivers\\chromedriver.exe");			//dr1 = new ChromeDriver();			dr1 = new FirefoxDriver();			WebDriverWait wt = new WebDriverWait(dr1, 120);			dr1.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr1.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching VIP manager URL " + url);			dr1.get("https://" + url);			wt.until(ExpectedConditions.elementToBeClickable(By.id("loginButton")));			dr1.findElement(By.name("tempuser.userName")).sendKeys(email);			dr1.findElement(By.name("tempuser.password")).sendKeys("1Password");			dr1.findElement(By.id("loginButton")).click();			wt.until(ExpectedConditions.presenceOfElementLocated(By.name("enteredOTP")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to request temp sec code ");			dr1.findElement(By.partialLinkText("Request a temporary security code")).click();			wt.until(ExpectedConditions.elementToBeClickable(By.name("continuebutton")));			dr1.findElement(By.name("continuebutton")).click();			//dr2 = new ChromeDriver();			dr2 = new FirefoxDriver();			dr2.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr2.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching gmail to get sec code ");			dr2.get("http://www.gmail.com");			WebDriverWait wt1 = new WebDriverWait(dr2, 120);			wt1.until(ExpectedConditions.presenceOfElementLocated(By.id("Email")));			dr2.findElement(By.id("Email")).sendKeys(email);			if (sHelper.isElementPresent(dr2, dr2.findElement(By.id("next")))) {				dr2.findElement(By.id("next")).click();			}			dr2.findElement(By.id("Passwd")).sendKeys("vipeg5678");			dr2.findElement(By.id("signIn")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicked on Sign In button to login to gmail ");			wt1.until(ExpectedConditions.visibilityOf(dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]"))));			String message = dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).getText();			if (message.contains("Temporary access to VIP Manager")) {				dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).click();			}			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to grab security code for authentication ");			String securitycode = dr2.findElement(By.xpath("//td[text()='Symantec User Authentication Technical Support']/ancestor::tr[1]/preceding-sibling::tr[2]/td/b")).getText();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Got security code: " + securitycode);			dr2.quit();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Entering temp security code in VIP manager ");			dr1.findElement(By.id("firstOTP")).sendKeys(securitycode);			dr1.findElement(By.id("continueButton")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Successfully logged to VIP manager");			dr1.findElement(By.linkText("Users")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to search for user " + userName);			dr1.findElement(By.id("searchText")).sendKeys(userName);			Thread.sleep(1000);			dr1.findElement(By.xpath("//input[@alt='Search']")).click();			Thread.sleep(10000);			wt.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//img[@alt='Unlock User']")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on unlock user");			dr1.findElement(By.xpath("//img[@alt='Unlock User']")).click();			String childid = dr1.getWindowHandle();			dr1.switchTo().window(childid);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on unlock on user unlock dialog");			dr1.findElement(By.id("primaryID")).click();			dr1.switchTo().defaultContent();			String message1 = dr1.findElement(By.xpath("//div[@id='ajaxMessagingComponent']/ul/li[2]/div")).getText();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Received the message " + message1);			if (message1.contains("You have successfully updated the user")) {				logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Successfully unlocked the user");			} else {				logger.info("Thread-" + Thread.currentThread().getId() + ": " + "failed to unclock the user");			}			dr1.quit();			Thread.sleep(8000);		} catch (Exception e) {			logger.error("Thread-" + Thread.currentThread().getId() + ": " + "Failed to enabled the credential\n" + e.getMessage());			dr1.quit();			dr2.quit();		}	}	public void resumeSuspendedPushCredential(String url, String userName, String email) {		WebDriver dr1 = null;		WebDriver dr2 = null;		SeleniumHelper sHelper = new SeleniumHelper();		try {			System.setProperty("webdriver.chrome.driver", "D:\\jenkins\\drivers\\chromedriver.exe");			dr1 = new ChromeDriver();			WebDriverWait wt = new WebDriverWait(dr1, 120);			dr1.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr1.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching VIP manager URL " + url);			dr1.get("https://" + url);			wt.until(ExpectedConditions.elementToBeClickable(By.id("loginButton")));			dr1.findElement(By.name("tempuser.userName")).sendKeys(email);			dr1.findElement(By.name("tempuser.password")).sendKeys("1Password");			dr1.findElement(By.id("loginButton")).click();			wt.until(ExpectedConditions.presenceOfElementLocated(By.name("enteredOTP")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to request temp sec code ");			dr1.findElement(By.partialLinkText("Request a temporary security code")).click();			wt.until(ExpectedConditions.elementToBeClickable(By.name("continuebutton")));			dr1.findElement(By.name("continuebutton")).click();			dr2 = new ChromeDriver();			dr2.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);			dr2.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Launching gmail to get sec code ");			dr2.get("http://www.gmail.com");			WebDriverWait wt1 = new WebDriverWait(dr2, 120);			wt1.until(ExpectedConditions.presenceOfElementLocated(By.id("Email")));			dr2.findElement(By.id("Email")).sendKeys(email);			if (sHelper.isElementPresent(dr2, dr2.findElement(By.id("next")))) {				dr2.findElement(By.id("next")).click();			}			dr2.findElement(By.id("Passwd")).sendKeys("vipeg5678");			dr2.findElement(By.id("signIn")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicked on Sign In button to login to gmail ");			wt1.until(ExpectedConditions.visibilityOf(dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]"))));			String message = dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).getText();			if (message.contains("Temporary access to VIP Manager")) {				dr2.findElement(By.xpath("//div[@class='UI']/div/descendant::table/descendant::tr[1]/td[6]/descendant::span[1]")).click();			}			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to grab security code for authentication ");			String securitycode = dr2.findElement(By.xpath("//td[text()='Symantec User Authentication Technical Support']/ancestor::tr[1]/preceding-sibling::tr[2]/td/b")).getText();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Got security code: " + securitycode);			dr2.quit();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Entering temp security code in VIP manager ");			dr1.findElement(By.id("firstOTP")).sendKeys(securitycode);			dr1.findElement(By.id("continueButton")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Successfully logged to VIP manager");			dr1.findElement(By.linkText("Users")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Trying to search for user " + userName);			dr1.findElement(By.id("searchText")).sendKeys(userName);			Thread.sleep(1000);			dr1.findElement(By.xpath("//input[@alt='Search']")).click();			Thread.sleep(10000);			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on Edit User");			dr1.findElement(By.xpath(".//*[@id='objectResults']/div/ul[2]/li[1]/div/a")).click();			wt.until(ExpectedConditions.presenceOfElementLocated(By.xpath(".//*[@id='credentialParentList']")));			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on Edit Credential");			dr1.findElement(By.xpath(".//*[@id='credentialParentList']/li[1]/ul/li[9]/a[1]")).click();			logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Clicking on drop down VIP Access Push drop down option");			Select dropdownCredState = new Select(dr1.findElement(By.name("mobilePush")));			List<WebElement> options = dropdownCredState.getOptions();			for (WebElement option : options) {				// logger.info("Thread-" + Thread.currentThread().getId() + ": "				// + "Vendor name is " + optionVendor.getText() +				// " and matching with test data " + vendor);				if (option.getText().trim().equalsIgnoreCase("enabled")) {					logger.info("Thread-" + Thread.currentThread().getId() + ": " + "Selecting vendor to ENABLED");					option.click();					break;				}			}			dr1.findElement(By.xpath(".//*[@id='credentialParentList']/li[1]/ul/li[5]/a")).click();			dr1.quit();			Thread.sleep(8000);		} catch (Exception e) {			logger.error("Thread-" + Thread.currentThread().getId() + ": " + "Failed to enabled suspended push credential\n" + e.getMessage());			dr1.quit();			dr2.quit();		}	}}