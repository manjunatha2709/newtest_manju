# VIP SDK Properties
com.verisign.webservice.api.validate_base.url=https://pv-userservices-auth.vip.symclab.com/vipuserservices/AuthenticationService_1_1
com.verisign.webservice.api.management_base.url=https://pv-userservices-auth.vip.symclab.com/vipuserservices/ManagementService_1_1
com.verisign.webservice.api.query_base.url=https://pv-userservices-auth.vip.symclab.com/vipuserservices/QueryService_1_1

# VIP Keystores
com.verisign.vipsdk.keyStore=C:\\Automation\\Resources\\pv_vip_cert.jks
# ::encrypted::<encrypted_password> (or) <plain_text>
com.verisign.vipsdk.keyStorePassword=1Password

# JAVA Truststores
com.verisign.vipsdk.trustStore=C:\\Automation\\Resources\\cacerts
# ::encrypted::<encrypted_password> (or) <plain_text>
com.verisign.vipsdk.trustStorePassword=changeit

# VIP SDK Proxy Info
com.verisign.vipsdk.webservice.proxy_host=
com.verisign.vipsdk.webservice.proxy_port=
com.verisign.vipsdk.webservice.proxy_username=
# ::encrypted::<encrypted_password> (or) <plain_text>
com.verisign.vipsdk.webservice.proxy_password=

# VIP Business Continuity <true/false>
com.verisign.vipsdk.enableBusinessContinuity=false

# VIP Validation Mode <MODE>
# <MODE> takes the following values.
# OnlyOtp              : Here the user has to provide only Security Code for strong authentication.(default)
# PinAndOtp  	       : Here the user has to provide both the Pin and Security Code for strong authenticaion.
# OptionalPinAndOtp    : Here the user has to provide the Security Code and he may or may not provide the Pin.
#			 If the user was not granted a Pin, then the strong authentication will use only the
#			 Security Code. If the user was granted a Pin and he did not provide a valid Pin then
#			 the strong authentication will fail.
com.verisign.vipsdk.validationMode=OnlyOtp
